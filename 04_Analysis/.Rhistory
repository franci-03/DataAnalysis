# Fit and summarize the model
fit_inter <- sem(model_inter, data = data_dmc, fixed.x = TRUE, estimator = "MLR")
summary(fit, fit.measures = TRUE, standardized = TRUE)
fit_inter2 <- sem(model_inter, data = data_dmc, std.lv= TRUE, se="boot", bootstrap=5000)
# Moderation model
model_inter <- '
# Measurement Model Definitions
JobCraftingControl =~ JC1IStR
JobCraftingExp =~ JC2IStR
# Direct Effects
JobCraftingExp ~ JobCraftingControl + Prompt_Support + NEOE + NEOA + NEOC + NEON + NEOO
# Moderation Effects
JobCraftingExp ~ JC2IStR.NEOE + JC2IStR.NEOA + JC2IStR.NEOC + JC2IStR.NEON + JC2IStR.NEOO
# Control Variables
JobCraftingExp ~ AGE + WORK + Gender_Männlich + Edu_Abgeschlossene_Berufsausbildung + Edu_Mittlere_Reife_Realschulabschluss + Edu_Abitur_oder_Fachabitur + Edu_Bachelor + Edu_Master + AILiteracyUse + AILiteracyKno + AILiteracyDet + AILiteracyEth + PGAT + NGAT
# Error Covariances
JC2IStR.NEOE ~~ JC2IStR.NEOA + JC2IStR.NEOC + JC2IStR.NEON + JC2IStR.NEOO
JC2IStR.NEOA ~~ JC2IStR.NEOC + JC2IStR.NEON + JC2IStR.NEOO
JC2IStR.NEOC ~~ JC2IStR.NEON + JC2IStR.NEOO
JC2IStR.NEON ~~ JC2IStR.NEOO
'
# Fit and summarize the model
fit_inter <- sem(model_inter, data = data_dmc, estimator = "MLR")
# Moderation model
model_inter <- '
# Measurement Model Definitions
JobCraftingControl =~ JC1IStR
JobCraftingExp =~ JC2IStR
# Direct Effects
JobCraftingExp ~ JobCraftingControl + Prompt_Support + NEOE + NEOA + NEOC + NEON + NEOO
# Moderation Effects
JobCraftingExp ~ JC2IStR.NEOE + JC2IStR.NEOA + JC2IStR.NEOC + JC2IStR.NEON + JC2IStR.NEOO
# Control Variables
JobCraftingExp ~ AGE + WORK + Gender_Männlich + Edu_Abgeschlossene_Berufsausbildung + Edu_Mittlere_Reife_Realschulabschluss + Edu_Abitur_oder_Fachabitur + Edu_Bachelor + Edu_Master + AILiteracyUse + AILiteracyKno + AILiteracyDet + AILiteracyEth + PGAT + NGAT
# Error Covariances
JC2IStR.NEOE ~~ JC2IStR.NEOA
JC2IStR.NEOE ~~ JC2IStR.NEOC
JC2IStR.NEOE ~~ JC2IStR.NEON
JC2IStR.NEOE ~~ JC2IStR.NEOO
JC2IStR.NEOA ~~ JC2IStR.NEOC
JC2IStR.NEOA ~~ JC2IStR.NEON
JC2IStR.NEOA ~~ JC2IStR.NEOO
JC2IStR.NEOC ~~ JC2IStR.NEON
JC2IStR.NEOC ~~ JC2IStR.NEOO
JC2IStR.NEON ~~ JC2IStR.NEOO
'
# Fit and summarize the model
fit_inter <- sem(model_inter, data = data_dmc, estimator = "MLR")
# Moderation model
model_inter <- '
# Measurement Model Definitions
JobCraftingControl =~ JC1IStR
JobCraftingExp =~ JC2IStR
# Direct Effects
JobCraftingExp ~ JobCraftingControl + Prompt_Support + NEOE + NEOA + NEOC + NEON + NEOO
# Moderation Effects
JobCraftingExp ~ JC2IStR.NEOE + JC2IStR.NEOA + JC2IStR.NEOC + JC2IStR.NEON + JC2IStR.NEOO
# Control Variables
JobCraftingExp ~ AGE + WORK + Gender_Männlich + Edu_Abgeschlossene_Berufsausbildung + Edu_Mittlere_Reife_Realschulabschluss + Edu_Abitur_oder_Fachabitur + Edu_Bachelor + Edu_Master + AILiteracyUse + AILiteracyKno + AILiteracyDet + AILiteracyEth + PGAT + NGAT
# Error Covariances
JC2IStR.NEOE ~~ JC2IStR.NEOA + JC2IStR.NEOC + JC2IStR.NEON + JC2IStR.NEOO
JC2IStR.NEOA ~~ JC2IStR.NEOC + JC2IStR.NEON + JC2IStR.NEOO
JC2IStR.NEOC ~~ JC2IStR.NEON + JC2IStR.NEOO
JC2IStR.NEON ~~ JC2IStR.NEOO
'
# Fit and summarize the model
fit_inter <- sem(model_inter, data = data_dmc, estimator = "MLR")
# Fit and summarize the model
fit_inter <- sem(model_inter, data = data_dmc, estimator = "MLR", fixed.x = FALSE)
# Moderation model
model_inter <- '
# Measurement Model Definitions
JobCraftingControl =~ JC1IStR
JobCraftingExp =~ JC2IStR
ModE =~ NEOE
ModA =~ NEOA
ModC =~ NEOC
ModN =~ NEON
ModO =~ NEOO
INT =~ JC2IStR.NEOE + JC2IStR.NEOA + JC2IStR.NEOC + JC2IStR.NEON + JC2IStR.NEOO
# Direct Effects
JobCraftingExp ~ JobCraftingControl + Prompt_Support + ModE + ModA + ModC + ModN + ModO + INT
# Control Variables
JobCraftingExp ~ AGE + WORK + Gender_Männlich + Edu_Abgeschlossene_Berufsausbildung + Edu_Mittlere_Reife_Realschulabschluss + Edu_Abitur_oder_Fachabitur + Edu_Bachelor + Edu_Master + AILiteracyUse + AILiteracyKno + AILiteracyDet + AILiteracyEth + PGAT + NGAT
# Error Covariances
JC2IStR.NEOE ~~ JC2IStR.NEOA + JC2IStR.NEOC + JC2IStR.NEON + JC2IStR.NEOO
JC2IStR.NEOA ~~ JC2IStR.NEOC + JC2IStR.NEON + JC2IStR.NEOO
JC2IStR.NEOC ~~ JC2IStR.NEON + JC2IStR.NEOO
JC2IStR.NEON ~~ JC2IStR.NEOO
'
# Fit and summarize the model
fit_inter <- sem(model_inter, data = data_dmc, estimator = "MLR")
# Moderation model
model_inter <- '
# Measurement Model Definitions
JobCraftingControl =~ JC1IStR
JobCraftingExp =~ JC2IStR
ModE =~ NEOE
ModA =~ NEOA
ModC =~ NEOC
ModN =~ NEON
ModO =~ NEOO
INT =~ JC2IStR.NEOE + JC2IStR.NEOA + JC2IStR.NEOC + JC2IStR.NEON + JC2IStR.NEOO
# Direct Effects
JobCraftingExp ~ JobCraftingControl + Prompt_Support + ModE + ModA + ModC + ModN + ModO + INT
# Error Covariances
JC2IStR.NEOE ~~ JC2IStR.NEOA + JC2IStR.NEOC + JC2IStR.NEON + JC2IStR.NEOO
JC2IStR.NEOA ~~ JC2IStR.NEOC + JC2IStR.NEON + JC2IStR.NEOO
JC2IStR.NEOC ~~ JC2IStR.NEON + JC2IStR.NEOO
JC2IStR.NEON ~~ JC2IStR.NEOO
'
# Fit and summarize the model
fit_inter <- sem(model_inter, data = data_dmc, estimator = "MLR")
# Moderation model
model_inter <- '
# Measurement Model Definitions
JobCraftingControl =~ JC1IStR
JobCraftingExp =~ JC2IStR
ModE =~ NEOE
ModA =~ NEOA
ModC =~ NEOC
ModN =~ NEON
ModO =~ NEOO
INT =~ JC2IStR.NEOE + JC2IStR.NEOA + JC2IStR.NEOC + JC2IStR.NEON + JC2IStR.NEOO
# Direct Effects
JobCraftingExp ~ JobCraftingControl + Prompt_Support + ModE + ModA + ModC + ModN + ModO + INT
'
# Fit and summarize the model
fit_inter <- sem(model_inter, data = data_dmc, estimator = "MLR")
# Simple sloaps
sloaps <- probe2WayMC(fit_inter, C("JC1IStR", "NEOE", "NEOA", "NEOC", "NEON", "NEOO",
"JC2IStR.NEOE", "JC2IStR.NEOA", "JC2IStR.NEOC", "JC2IStR.NEON", "JC2IStR.NEOO"),
"JC2IStR", "NEOE", "NEOA", "NEOC", "NEON", "NEOO",
c(-sqrt(1.462),0,sqrt(1.462)))
# Fit and summarize the model
fit <- sem(model_inter, data = data_dmc, estimator = "MLR")
# Moderation model
model_inter <- '
# Measurement Model Definitions
JobCraftingControl =~ JC1IStR
JobCraftingExp =~ JC2IStR
# Direct Effects
JobCraftingExp ~ JobCraftingControl + Prompt_Support + NEOE + NEOA + NEOC + NEON + NEOO
# Moderation Effects
JobCraftingExp ~ JC2IStR.NEOE + JC2IStR.NEOA + JC2IStR.NEOC + JC2IStR.NEON + JC2IStR.NEOO
# Control Variables
JobCraftingExp ~ AGE + WORK + Gender_Männlich + Edu_Abgeschlossene_Berufsausbildung + Edu_Mittlere_Reife_Realschulabschluss + Edu_Abitur_oder_Fachabitur + Edu_Bachelor + Edu_Master + AILiteracyUse + AILiteracyKno + AILiteracyDet + AILiteracyEth + PGAT + NGAT
# Error Covariances
JC2IStR.NEOE ~~ JC2IStR.NEOA + JC2IStR.NEOC + JC2IStR.NEON + JC2IStR.NEOO
JC2IStR.NEOA ~~ JC2IStR.NEOC + JC2IStR.NEON + JC2IStR.NEOO
JC2IStR.NEOC ~~ JC2IStR.NEON + JC2IStR.NEOO
JC2IStR.NEON ~~ JC2IStR.NEOO
'
# Fit and summarize the model
fit <- sem(model_inter, data = data_dmc, estimator = "MLR")
# Calculate means and standard deviations for the moderators
means <- colMeans(data[, c("NEOE", "NEOA", "NEOC", "NEON", "NEOO")], na.rm = TRUE)
sds <- apply(data[, c("NEOE", "NEOA", "NEOC", "NEON", "NEOO")], 2, sd, na.rm = TRUE)
# Create a new data frame for plotting
new_data <- expand.grid(
NEOE = means["NEOE"] + c(-sds["NEOE"], 0, sds["NEOE"]),
NEOA = means["NEOA"],
NEOC = means["NEOC"],
NEON = means["NEON"],
NEOO = means["NEOO"],
AGE = mean(data$AGE, na.rm = TRUE),
WORK = mean(data$WORK, na.rm = TRUE),
Gender_Männlich = round(mean(data$Gender_Männlich, na.rm = TRUE)),
Edu_Abgeschlossene_Berufsausbildung = round(mean(data$Edu_Abgeschlossene_Berufsausbildung, na.rm = TRUE)),
Edu_Mittlere_Reife_Realschulabschluss = round(mean(data$Edu_Mittlere_Reife_Realschulabschluss, na.rm = TRUE)),
Edu_Abitur_oder_Fachabitur = round(mean(data$Edu_Abitur_oder_Fachabitur, na.rm = TRUE)),
Edu_Bachelor = round(mean(data$Edu_Bachelor, na.rm = TRUE)),
Edu_Master = round(mean(data$Edu_Master, na.rm = TRUE)),
AILiteracyUse = mean(data$AILiteracyUse, na.rm = TRUE),
AILiteracyKno = mean(data$AILiteracyKno, na.rm = TRUE),
AILiteracyDet = mean(data$AILiteracyDet, na.rm = TRUE),
AILiteracyEth = mean(data$AILiteracyEth, na.rm = TRUE),
PGAT = mean(data$PGAT, na.rm = TRUE),
NGAT = mean(data$NGAT, na.rm = TRUE),
JobCraftingControl = mean(data$JC1IStR, na.rm = TRUE),
Prompt_Support = round(mean(data$Prompt_Support, na.rm = TRUE))
)
# Predict JobCraftingExp at different levels of NEOE
new_data$predicted_JC2IStR <- predict(fit, newdata = new_data, type = "response")
model_inter <- '
# Measurement Model Definitions
iv =~ JC1IStR + Prompt_Support
mod =~ NEOE + NEOA + NEOC + NEON + NEOO
dv =~ JC2IStR
int =~ JC2IStR.NEOE + JC2IStR.NEOA + JC2IStR.NEOC + JC2IStR.NEON + JC2IStR.NEOO
# Direct Effects
dv ~ iv + mod + int
# Control Variables
JobCraftingExp ~ AGE + WORK + Gender_Männlich + Edu_Abgeschlossene_Berufsausbildung + Edu_Mittlere_Reife_Realschulabschluss + Edu_Abitur_oder_Fachabitur + Edu_Bachelor + Edu_Master + AILiteracyUse + AILiteracyKno + AILiteracyDet + AILiteracyEth + PGAT + NGAT
# Error Covariances
JC2IStR.NEOE ~~ JC2IStR.NEOA + JC2IStR.NEOC + JC2IStR.NEON + JC2IStR.NEOO
JC2IStR.NEOA ~~ JC2IStR.NEOC + JC2IStR.NEON + JC2IStR.NEOO
JC2IStR.NEOC ~~ JC2IStR.NEON + JC2IStR.NEOO
JC2IStR.NEON ~~ JC2IStR.NEOO
'
# Moderation model
model_inter <- '
# Measurement Model Definitions
JobCraftingControl =~ JC1IStR
JobCraftingExp =~ JC2IStR
# Direct Effects
JobCraftingExp ~ JobCraftingControl + Prompt_Support + NEOE + NEOA + NEOC + NEON + NEOO
# Moderation Effects
JobCraftingExp ~ JC2IStR.NEOE + JC2IStR.NEOA + JC2IStR.NEOC + JC2IStR.NEON + JC2IStR.NEOO
# Control Variables
JobCraftingExp ~ AGE + WORK + Gender_Männlich + Edu_Abgeschlossene_Berufsausbildung + Edu_Mittlere_Reife_Realschulabschluss + Edu_Abitur_oder_Fachabitur + Edu_Bachelor + Edu_Master + AILiteracyUse + AILiteracyKno + AILiteracyDet + AILiteracyEth + PGAT + NGAT
# Error Covariances
JC2IStR.NEOE ~~ JC2IStR.NEOA + JC2IStR.NEOC + JC2IStR.NEON + JC2IStR.NEOO
JC2IStR.NEOA ~~ JC2IStR.NEOC + JC2IStR.NEON + JC2IStR.NEOO
JC2IStR.NEOC ~~ JC2IStR.NEON + JC2IStR.NEOO
JC2IStR.NEON ~~ JC2IStR.NEOO
'
# Fit and summarize the model
fit <- sem(model_inter, data = data_dmc, estimator = "MLR")
summary(fit, fit.measures = TRUE, standardized = TRUE)
# Moderation model
model_inter <- '
# Measurement Model Definitions
JobCraftingControl =~ JC1IStR
JobCraftingExp =~ JC2IStR
# Direct Effects
JobCraftingExp ~ JobCraftingControl + Prompt_Support + NEOE + NEOA + NEOC + NEON + NEOO
# Moderation Effects
JobCraftingExp ~ JC2IStR.NEOE + JC2IStR.NEOA + JC2IStR.NEOC + JC2IStR.NEON + JC2IStR.NEOO
# Control Variables
JobCraftingExp ~ AGE + WORK + Gender_Männlich + Edu_Abgeschlossene_Berufsausbildung + Edu_Mittlere_Reife_Realschulabschluss + Edu_Abitur_oder_Fachabitur + Edu_Bachelor + Edu_Master + AILiteracyUse + AILiteracyKno + AILiteracyDet + AILiteracyEth + PGAT + NGAT
'
# Fit and summarize the model
fit <- sem(model_inter, data = data_dmc, estimator = "MLR")
summary(fit, fit.measures = TRUE, standardized = TRUE)
# Moderation model
model_inter <- '
# Measurement Model Definitions
JobCraftingControl =~ JC1IStR
JobCraftingExp =~ JC2IStR
# Direct Effects
JobCraftingExp ~ JobCraftingControl + Prompt_Support + NEOE + NEOA + NEOC + NEON + NEOO
# Moderation Effects
JobCraftingExp ~ JC2IStR.NEOE + JC2IStR.NEOA + JC2IStR.NEOC + JC2IStR.NEON + JC2IStR.NEOO
# Control Variables
JobCraftingExp ~ AGE + WORK + Gender_Männlich + Edu_Abgeschlossene_Berufsausbildung + Edu_Mittlere_Reife_Realschulabschluss + Edu_Abitur_oder_Fachabitur + Edu_Bachelor + Edu_Master + AILiteracyUse + AILiteracyKno + AILiteracyDet + AILiteracyEth + PGAT + NGAT
# Error Covariances
JC2IStR.NEOE ~~ JC2IStR.NEOA + JC2IStR.NEOC + JC2IStR.NEON + JC2IStR.NEOO
JC2IStR.NEOA ~~ JC2IStR.NEOC + JC2IStR.NEON + JC2IStR.NEOO
JC2IStR.NEOC ~~ JC2IStR.NEON + JC2IStR.NEOO
JC2IStR.NEON ~~ JC2IStR.NEOO
'
# Fit and summarize the model
fit <- sem(model_inter, data = data_dmc, estimator = "MLR")
summary(fit, fit.measures = TRUE, standardized = TRUE)
# Moderation model
model_inter <- '
# Measurement Model Definitions
JobCraftingControl =~ JC1IStR
JobCraftingExp =~ JC2IStR
# Direct Effects
JobCraftingExp ~ JobCraftingControl + Prompt_Support + NEOE + NEOA + NEOC + NEON + NEOO
# Moderation Effects
JobCraftingExp ~ JC2IStR.NEOE + JC2IStR.NEOA + JC2IStR.NEOC + JC2IStR.NEON + JC2IStR.NEOO
# Control Variables
JobCraftingExp ~ AGE + WORK + Gender_Männlich + Edu_Abgeschlossene_Berufsausbildung + Edu_Mittlere_Reife_Realschulabschluss + Edu_Abitur_oder_Fachabitur + Edu_Bachelor + Edu_Master + AILiteracyUse + AILiteracyKno + AILiteracyDet + AILiteracyEth + PGAT + NGAT
# Error Covariances
JC2IStR.NEOE ~~ JC2IStR.NEON
JC2IStR.NEOC ~~ JC2IStR.NEOO
'
# Fit and summarize the model
fit <- sem(model_inter, data = data_dmc, estimator = "MLR")
summary(fit, fit.measures = TRUE, standardized = TRUE)
model_inter <- '
# Measurement Model Definitions
iv =~ JC1IStR
mod =~ NEOE + NEOA + NEOC + NEON + NEOO
dv =~ JC2IStR
int =~ JC2IStR.NEOE + JC2IStR.NEOA + JC2IStR.NEOC + JC2IStR.NEON + JC2IStR.NEOO
# Direct Effects
dv ~ iv + mod + int
# Control Variables
JobCraftingExp ~ AGE + WORK + Gender_Männlich + Edu_Abgeschlossene_Berufsausbildung + Edu_Mittlere_Reife_Realschulabschluss + Edu_Abitur_oder_Fachabitur + Edu_Bachelor + Edu_Master + AILiteracyUse + AILiteracyKno + AILiteracyDet + AILiteracyEth + PGAT + NGAT
# Error Covariances
JC2IStR.NEOE ~~ JC2IStR.NEOA + JC2IStR.NEOC + JC2IStR.NEON + JC2IStR.NEOO
JC2IStR.NEOA ~~ JC2IStR.NEOC + JC2IStR.NEON + JC2IStR.NEOO
JC2IStR.NEOC ~~ JC2IStR.NEON + JC2IStR.NEOO
JC2IStR.NEON ~~ JC2IStR.NEOO
'
# Fit and summarize the model
fit <- sem(model_inter, data = data_dmc, estimator = "MLR")
model_inter <- '
# Measurement Model Definitions
iv =~ JC1IStR
mod =~ NEOE + NEOA + NEOC + NEON + NEOO
dv =~ JC2IStR
int =~ JC2IStR.NEOE + JC2IStR.NEOA + JC2IStR.NEOC + JC2IStR.NEON + JC2IStR.NEOO
# Direct Effects
dv ~ iv + mod + int
# Control Variables
dv ~ AGE + WORK + Gender_Männlich + Edu_Abgeschlossene_Berufsausbildung + Edu_Mittlere_Reife_Realschulabschluss + Edu_Abitur_oder_Fachabitur + Edu_Bachelor + Edu_Master + AILiteracyUse + AILiteracyKno + AILiteracyDet + AILiteracyEth + PGAT + NGAT
# Error Covariances
JC2IStR.NEOE ~~ JC2IStR.NEOA + JC2IStR.NEOC + JC2IStR.NEON + JC2IStR.NEOO
JC2IStR.NEOA ~~ JC2IStR.NEOC + JC2IStR.NEON + JC2IStR.NEOO
JC2IStR.NEOC ~~ JC2IStR.NEON + JC2IStR.NEOO
JC2IStR.NEON ~~ JC2IStR.NEOO
'
# Fit and summarize the model
fit <- sem(model_inter, data = data_dmc, estimator = "MLR")
summary(fit, fit.measures = TRUE, standardized = TRUE)
# Double Mean Centering
data_dmc <- indProd(data, var1 = c("JC2HRJD"),
var2 = c("NEOE", "NEOA", "NEOC", "NEON", "NEOO"),
match = FALSE, meanC = TRUE,
residualC = FALSE, doubleMC = TRUE)
head(data_dmc)
model_inter <- '
# Measurement Model Definitions
JobCraftingControl =~ JC1IStR + JC1HRJD
JobCraftingExp =~ JC2IStR + JC2HRJD
# Direct Effects
JobCraftingExp ~ JobCraftingControl + Prompt_Support + NEOE + NEOA + NEOC + NEON + NEOO
# Moderation Effects
JobCraftingExp ~ JC2IStR.NEOE + JC2IStR.NEOA + JC2IStR.NEOC + JC2IStR.NEON + JC2IStR.NEOO +
JC2HRJD.NEOE + JC2HRJD.NEOA + JC2HRJD.NEOC + JC2HRJD.NEON + JC2HRJD.NEOO
# Control Variables
JobCraftingExp ~ AGE + WORK + Gender_Männlich + Edu_Abgeschlossene_Berufsausbildung + Edu_Mittlere_Reife_Realschulabschluss + Edu_Abitur_oder_Fachabitur + Edu_Bachelor + Edu_Master + AILiteracyUse + AILiteracyKno + AILiteracyDet + AILiteracyEth + PGAT + NGAT
'
# Fit and summarize the model
fit <- sem(model_inter, data = data_dmc, estimator = "MLR")
# Double Mean Centering
data_dmc <- indProd(data, var1 = c("JC2IStR"),
var2 = c("NEOE", "NEOA", "NEOC", "NEON", "NEOO"),
match = FALSE, meanC = TRUE,
residualC = FALSE, doubleMC = TRUE)
# Double Mean Centering
data_dmc2 <- indProd(data, var1 = c("JC2HRJD"),
var2 = c("NEOE", "NEOA", "NEOC", "NEON", "NEOO"),
match = FALSE, meanC = TRUE,
residualC = FALSE, doubleMC = TRUE)
# Double Mean Centering
data_dmc2 <- indProd(data_dmc, var1 = c("JC2HRJD"),
var2 = c("NEOE", "NEOA", "NEOC", "NEON", "NEOO"),
match = FALSE, meanC = TRUE,
residualC = FALSE, doubleMC = TRUE)
rm(list=ls())
# Load data
data <- read.csv('data_merged_all_analysis.csv')
# Double Mean Centering
data_dmc <- indProd(data, var1 = c("JC2IStR"),
var2 = c("NEOE", "NEOA", "NEOC", "NEON", "NEOO"),
match = FALSE, meanC = TRUE,
residualC = FALSE, doubleMC = TRUE)
# Double Mean Centering
data_dmc2 <- indProd(data_dmc, var1 = c("JC2HRJD"),
var2 = c("NEOE", "NEOA", "NEOC", "NEON", "NEOO"),
match = FALSE, meanC = TRUE,
residualC = FALSE, doubleMC = TRUE)
model_inter <- '
# Measurement Model Definitions
JobCraftingControl =~ JC1IStR + JC1HRJD
JobCraftingExp =~ JC2IStR + JC2HRJD
# Direct Effects
JobCraftingExp ~ JobCraftingControl + Prompt_Support + NEOE + NEOA + NEOC + NEON + NEOO
# Moderation Effects
JobCraftingExp ~ JC2IStR.NEOE + JC2IStR.NEOA + JC2IStR.NEOC + JC2IStR.NEON + JC2IStR.NEOO +
JC2HRJD.NEOE + JC2HRJD.NEOA + JC2HRJD.NEOC + JC2HRJD.NEON + JC2HRJD.NEOO
# Control Variables
JobCraftingExp ~ AGE + WORK + Gender_Männlich + Edu_Abgeschlossene_Berufsausbildung + Edu_Mittlere_Reife_Realschulabschluss + Edu_Abitur_oder_Fachabitur + Edu_Bachelor + Edu_Master + AILiteracyUse + AILiteracyKno + AILiteracyDet + AILiteracyEth + PGAT + NGAT
'
# Fit and summarize the model
fit <- sem(model_inter, data = data_dmc2, estimator = "MLR")
model_inter <- '
# Measurement Model Definitions
JobCraftingControl =~ JC1HRJD
JobCraftingExp =~ JC2HRJD
# Direct Effects
JobCraftingExp ~ JobCraftingControl + Prompt_Support + NEOE + NEOA + NEOC + NEON + NEOO
# Moderation Effects
JobCraftingExp ~ JC2HRJD.NEOE + JC2HRJD.NEOA + JC2HRJD.NEOC + JC2HRJD.NEON + JC2HRJD.NEOO
# Control Variables
JobCraftingExp ~ AGE + WORK + Gender_Männlich + Edu_Abgeschlossene_Berufsausbildung + Edu_Mittlere_Reife_Realschulabschluss + Edu_Abitur_oder_Fachabitur + Edu_Bachelor + Edu_Master + AILiteracyUse + AILiteracyKno + AILiteracyDet + AILiteracyEth + PGAT + NGAT
'
# Fit and summarize the model
fit <- sem(model_inter, data = data_dmc2, estimator = "MLR")
summary(fit, fit.measures = TRUE, standardized = TRUE)
model_inter <- '
# Measurement Model Definitions
JobCraftingControl =~ JC1HRJD
JobCraftingExp =~ JC2HRJD
# Direct Effects
JobCraftingExp ~ JobCraftingControl + Prompt_Support + NEOE + NEOA + NEOC + NEON + NEOO
# Moderation Effects
JobCraftingExp ~ JC2HRJD.NEOE + JC2HRJD.NEOA + JC2HRJD.NEOC + JC2HRJD.NEON + JC2HRJD.NEOO
# Control Variables
JobCraftingExp ~ AGE + WORK + Gender_Männlich + Edu_Abgeschlossene_Berufsausbildung + Edu_Mittlere_Reife_Realschulabschluss + Edu_Abitur_oder_Fachabitur + Edu_Bachelor + Edu_Master + AILiteracyUse + AILiteracyKno + AILiteracyDet + AILiteracyEth + PGAT + NGAT
JC2HRJD.NEOE ~~ JC2HRJD.NEOA + JC2HRJD.NEOC + JC2HRJD.NEON + JC2HRJD.NEOO
JC2HRJD.NEOA ~~ JC2HRJD.NEOC + JC2HRJD.NEON + JC2HRJD.NEOO
JC2HRJD.NEOC ~~ JC2HRJD.NEON + JC2HRJD.NEOO
JC2HRJD.NEON ~~ JC2HRJD.NEOO
'
# Fit and summarize the model
fit <- sem(model_inter, data = data_dmc2, estimator = "MLR")
summary(fit, fit.measures = TRUE, standardized = TRUE)
# Calculate means and standard deviations for each Big Five trait
means <- colMeans(data[, c("NEOE", "NEOA", "NEOC", "NEON", "NEOO")], na.rm = TRUE)
sds <- apply(data[, c("NEOE", "NEOA", "NEOC", "NEON", "NEOO")], 2, sd, na.rm = TRUE)
# Generate new data for plotting
plot_data <- expand.grid(
NEOE = means['NEOE'] + c(-sds['NEOE'], 0, sds['NEOE']),
NEOA = means['NEOA'],
NEOC = means['NEOC'],
NEON = means['NEON'],
NEOO = means['NEOO']
)
# Predict values for JC2IStR at different levels of NEOE
plot_data$predicted_JC2IStR <- with(plot_data,
predict(fit, newdata = data.frame(NEOE = NEOE, NEOA = NEOA, NEOC = NEOC, NEON = NEON, NEOO = NEOO)))
library(ggplot2)
# Assuming your data is stored in data_dmc
mean_neoe <- mean(data_dmc$NEOE, na.rm = TRUE)
sd_neoe <- sd(data_dmc$NEOE, na.rm = TRUE)
mean_neoa <- mean(data_dmc$NEOA, na.rm = TRUE)
sd_neoa <- sd(data_dmc$NEOA, na.rm = TRUE)
mean_neoc <- mean(data_dmc$NEOC, na.rm = TRUE)
sd_neoc <- sd(data_dmc$NEOC, na.rm = TRUE)
mean_neon <- mean(data_dmc$NEON, na.rm = TRUE)
sd_neon <- sd(data_dmc$NEON, na.rm = TRUE)
mean_neoo <- mean(data_dmc$NEOO, na.rm = TRUE)
sd_neoo <- sd(data_dmc$NEOO, na.rm = TRUE)
# Predicted values at different levels of NEOE (e.g., mean, +1SD, -1SD)
predicted_neoe_low <- predict(fit, newdata = data.frame(NEOE = mean_neoe - sd_neoe))
# Fit the model
fit <- sem(model_inter, data = data_dmc, estimator = "MLR")
# Assuming 'Prompt_Support' is coded as 0 and 1, and personality traits are centered
results <- probe2WayMC(fit, latent = FALSE, x = "JobCraftingControl", mod = "NEOE", modVals = "std", data = data_dmc)
# Assuming 'Prompt_Support' is coded as 0 and 1, and personality traits are centered
results <- probe2WayMC(fit, x = "JobCraftingControl", mod = "NEOE", modVals = "std", data = data_dmc)
# Predicted values at different levels of NEOE (e.g., mean, +1SD, -1SD)
predicted_neoe_low <- predict(fit, newdata = data_dmc(NEOE = mean_neoe - sd_neoe))
# Predicted values at different levels of NEOE (e.g., mean, +1SD, -1SD)
predicted_neoe_low <- predict(fit, newdata = data.frame(NEOE = mean_neoe - sd_neoe))
I
# Moderation model
model_inter <- '
# Measurement Model Definitions
JobCraftingControl =~ JC1IStR
JobCraftingExp =~ JC2IStR
# Direct Effects
JobCraftingExp ~ JobCraftingControl + Prompt_Support + NEOE + NEOA + NEOC + NEON + NEOO
# Moderation Effects
JobCraftingExp ~ JC2IStR.NEOE + JC2IStR.NEOA + JC2IStR.NEOC + JC2IStR.NEON + JC2IStR.NEOO
# Control Variables
JobCraftingExp ~ AGE + WORK + Gender_Männlich + Edu_Abgeschlossene_Berufsausbildung + Edu_Mittlere_Reife_Realschulabschluss + Edu_Abitur_oder_Fachabitur + Edu_Bachelor + Edu_Master + AILiteracyUse + AILiteracyKno + AILiteracyDet + AILiteracyEth + PGAT + NGAT
# Error Covariances
JC2IStR.NEOE ~~ JC2IStR.NEOA + JC2IStR.NEOC + JC2IStR.NEON + JC2IStR.NEOO
JC2IStR.NEOA ~~ JC2IStR.NEOC + JC2IStR.NEON + JC2IStR.NEOO
JC2IStR.NEOC ~~ JC2IStR.NEON + JC2IStR.NEOO
JC2IStR.NEON ~~ JC2IStR.NEOO
'
# Fit and summarize the model
fit <- sem(model_inter, data = data_dmc, estimator = "MLR")
# Assuming 'Prompt_Support' is coded as 0 and 1, and personality traits are centered
results <- probe2WayMC(fit, x = "JobCraftingControl", mod = "NEOE", modVals = "std", data = data_dmc)
summary(fit, fit.measures = TRUE, standardized = TRUE)
# Simple sloaps
sloaps <- probe2WayMC(fit, C("JC1IStR", "NEOE", "JC2IStR.NEOE"), "JC2IStR", "NEOE",
c(-sqrt(0.113),0,sqrt(0.113))) # variance from trait
# Note: Adjust the following variable names according to your actual model syntax
slopes <- probe2WayMC(fit, moderator = "NEOE", focal = "Prompt_Support",
modName = "JC2IStR.NEOE", values = c(-sqrt(0.113), 0, sqrt(0.113)))
# Note: Adjust the following variable names according to your actual model syntax
slopes <- probe2WayMC(fit, moderator = "NEOE", focal = "Prompt_Support",
modName = "JC2IStR.NEOE", values = c(-sqrt(0.113), 0, sqrt(0.113)))
# Note: Adjust the following variable names according to your actual model syntax
slopes <- probe2WayMC(object = fit,
X = "Prompt_Support",
M = "NEOE",
XwithM = "JC2IStR.NEOE",
modVals = c(-sqrt(0.113), 0, sqrt(0.113)))
# Simple sloaps
probe <- probe2WayMC(fit, C("JC1IStR", "JC2IStR.NEOE"), "JC2IStR", "JC2IStR.NEOE",
c(-sqrt(0.113),0,sqrt(0.113))) # variance from trait
# Simple sloaps
probe <- probe2WayMC(fit, C("JC1IStR", "NEOE", "JC2IStR.NEOE"), "JC2IStR", "NEOE",
c(-sqrt(0.113),0,sqrt(0.113))) # variance from trait
# Calculate means and standard deviations
means <- colMeans(data_dmc[, c("NEOE", "NEOA", "NEOC", "NEON", "NEOO")], na.rm = TRUE)
sds <- apply(data_dmc[, c("NEOE", "NEOA", "NEOC", "NEON", "NEOO")], 2, sd, na.rm = TRUE)
# Create a new data frame for predictions
new_data <- expand.grid(
Prompt_Support = c(0, 1),
NEOE = c(means['NEOE'], means['NEOE'] + sds['NEOE'], means['NEOE'] - sds['NEOE']),
NEOA = c(means['NEOA'], means['NEOA'] + sds['NEOA'], means['NEOA'] - sds['NEOA']),
NEOC = c(means['NEOC'], means['NEOC'] + sds['NEOC'], means['NEOC'] - sds['NEOC']),
NEON = c(means['NEON'], means['NEON'] + sds['NEON'], means['NEON'] - sds['NEON']),
NEOO = c(means['NEOO'], means['NEOO'] + sds['NEOO'], means['NEOO'] - sds['NEOO'])
)
# Predict the effects
predictions <- predict(fit, newdata = new_data)
# Simple sloaps
probe <- probe2WayMC(fit, nameX = c("JC1IStR", "NEOE", "JC2IStR.NEOE"), nameY = "JC2IStR",
modVar = "NEOE", valProbe = c(-sqrt(0.113), 0, sqrt(0.113))) # variance from trait
# Simple sloaps
probe <- probe2WayMC(fit, nameX = c("JC1IStR", "NEOE", "JC2IStR.NEOE"), nameY = "JC2IStR",
modVar = "NEOE", valProbe = c(-sqrt(1), 0, sqrt(1))) # variance from trait
cfa_model_ailit <- '
AILiteracy_Use =~ AILiteracyUse1 + AILiteracyUse2 + AILiteracyUse3 + AILiteracyUse4 + AILiteracyUse5 + AILiteracyUse6
AILiteracy_Kno =~ AILiteracyKno1 + AILiteracyKno2 + AILiteracyKno3 + AILiteracyKno4 + AILiteracyKno5 + AILiteracyKno6
AILiteracy_Det =~ AILiteracyDet1 + AILiteracyDet2 + AILiteracyDet3
AILiteracy_Eth =~ AILiteracyEth1 + AILiteracyEth3
'
